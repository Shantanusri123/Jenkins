pipeline {
  
  parameters {
    string(name: 'environment', defaultValue: 'dev', description: 'Workspace/environment file to use for deployment')
    booleanParam(name : 'autoApprove', defaultValue: false, description: 'Automatically run apply after generating plan?')
  }
  
  environment{
    aws_access_key = credentials('aws_access_key')
    aws_secret_key = credentials('aws_secret_key')
    
  }

  agent any

  tools {
     terraform 'terraform-10'
  }
 
  options {
    skipDefaultCheckout(true)
  }
  stages{
    stage('clean workspace') {
      steps {
        cleanWs()
      }
    }

 stage('checkoutsg') {
 
 steps{
     sh  'git clone https://430bba6d-9b18-4ab2-8545-061bcae1edf8@github.com/Shantanusri123/security_group.git' 
  }  
 }

 stage('checkoutsgtfvars') {

 steps{
     sh  'git clone https://430bba6d-9b18-4ab2-8545-061bcae1edf8@github.com/Shantanusri123/security_group_tfvars.git' 
  } 
}

 stage('checkoutec2') {
 
 steps{
     sh  'git clone https://430bba6d-9b18-4ab2-8545-061bcae1edf8@github.com/Shantanusri123/ec2-Instance.git' 
  } 
}

 stage('checkoutec2tfvars') {
  steps{
       sh  'git clone https://430bba6d-9b18-4ab2-8545-061bcae1edf8@github.com/Shantanusri123/ec2-instance-tfvars.git'
    }
 }
  /*  stage('terraform init-sg') {
      steps {
        sh 'terraform  -chdir="/var/jenkins_home/workspace/jenkins-test/security_group" init -backend-config="../security_group_tfvars/${environment}-backend.tfvars"'
      }
    }
    
     stage('terraform plan sg') {
      steps {
        sh 'terraform -chdir="/var/jenkins_home/workspace/jenkins-test/security_group" plan -var-file="../security_group_tfvars/${environment}.tfvars"'
      }
    }

     stage('terraform apply sg') {
      steps {
        sh 'terraform -chdir="/var/jenkins_home/workspace/jenkins-test/security_group" apply -auto-approve -var-file="../security_group_tfvars/${environment}.tfvars"'
      }
    }*/
    
    stage('terraform init-ec2') {
      steps {
        sh 'terraform  -chdir="/var/jenkins_home/workspace/jenkins-test/ec2-Instance" init'
      }
    }

     stage('terraform plan ec2') {
      steps {
        sh 'terraform -chdir="/var/jenkins_home/workspace/jenkins-test/ec2-Instance" plan -var-file="../ec2-instance-tfvars/${environment}.tfvars"'
      }
    }

     stage('terraform apply ec2') {
      steps {
        sh 'terraform -chdir="/var/jenkins_home/workspace/jenkins-test/ec2-Instance" apply -auto-approve -var-file="../ec2-instance-tfvars/${environment}.tfvars"'
      }
    }

  }
   
 
}
