pipeline {
  
  parameters {
    string(name: 'environment', defaultValue: 'default', description: 'Workspace/environment file to use for deployment')
    booleanParam(name : 'autoApprove', defaultValue: false, description: 'Automatically run apply after generating plan?')
  }
  
  environment{
    aws_access_key = credentials('aws_access_key')
    aws_secret_key = credentials('aws_secret_key')
  }

  agent any

  tools {
terraform 'terraform-10'
}
  options {
    skipDefaultCheckout(true)
  }
  stages{
    stage('clean workspace') {
      steps {
        cleanWs()
      }
    }
    
    /*
    stage('checkout') {
      steps {
         checkout scm 
      }
      
       steps {
            checkout \
                scm: [ $class : 'GitSCM', \
                     branches: [[name: '*/master']], \
                     extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: ''], 
                                 [ $class: 'ScmName', name: 'subdirectory1' ]], \
                     userRemoteConfigs: [[ \
                         url: 'https://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@github.com/Shantanusri123/ec2-Instance.git'  \
                     ]]
                ]
            checkout \
                scm: [ $class : 'GitSCM', \
                     branches: [[name: '*/master']], \
                     extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: ''], 
                                 [ $class: 'ScmName', name: 'subdirectory2' ]], \
                     userRemoteConfigs: [[ \
                         url: 'https://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@github.com/Shantanusri123/ec2-instance-tfvars.git'  \
                     ]]
                ]
        }

    }*/
    
    stage('Checkout') {
 // Get CalibrationResults from GitHub
 checkout([  
            $class: 'GitSCM', 
            branches: [[name: 'refs/heads/master']], 
            doGenerateSubmoduleConfigurations: false, 
            extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'C:\ProgramData\Jenkins\.jenkins\workspace']], 
            submoduleCfg: [], 
            userRemoteConfigs: [[credentialsId: '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', url: 'https://github.com/Shantanusri123/ec2-Instance.git']]
        ])
 // Get Combination from GitHub
 checkout([  
            $class: 'GitSCM', 
            branches: [[name: 'refs/heads/master']], 
            doGenerateSubmoduleConfigurations: false, 
            extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'C:\ProgramData\Jenkins\.jenkins\workspace']], 
            submoduleCfg: [], 
            userRemoteConfigs: [[credentialsId: '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', url: 'https://github.com/Shantanusri123/ec2-instance-tfvars.git']]
        ])

 

}
    
    
    stage('terraform init') {
      steps {
        bat 'terraform init'
      }
    }
    stage('terraform plan') {
      steps {
        bat "terraform plan -var-file=${environment}.tfvars"
      }
    }
    stage('terraform apply') {
      steps {
        bat "terraform apply -var-file=${environment}.tfvars -auto-approve  -no-color"
      }
    }
  }
  post {
    always {
      cleanWs()
    }
  }
}
